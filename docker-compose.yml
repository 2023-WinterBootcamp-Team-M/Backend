version: "3.8"

services:
  mysqldb:
    build: ./db
    container_name: mysqldb
    env_file:
      - "./db/.env"
    ports:
      - "3306:3306"

  backend:
    build:
      context: ./django_back
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    restart: always
    depends_on:
      - mysqldb
    command:
      bash -c "python wait_mysql.py &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"

  prometheus :
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    restart: unless-stopped
    depends_on:
      - prometheus
      - node-exporter

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.textfile.directory=/etc/node-exporter/'
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global





  rabbitmq:
    image: "rabbitmq:3.9-management"
    container_name: rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      # Expose the port for the worker to add/get tasks
      - 5672:5672
      # OPTIONAL: Expose the GUI port
      - 15672:15672
    depends_on:
      - backend
    restart: always
    tty: true   # restart: unless-stopped??
    expose:
      - 5672

  celery_worker:
    container_name: celery_worker
    volumes:
      - ./:/app
    command: sh -c "celery -A django_back worker --loglevel=info"
    build: ./django_back
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - rabbitmq
      - backend
    restart: always
    tty: true

  celery_beat:
    container_name: celery_beat
    volumes:
      - ./:/app
    command: sh -c "celery -A django_back beat --loglevel=info"
    build: ./django_back
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - rabbitmq
      - backend
    restart: always
    tty: true

  flower:
    image: mher/flower
    container_name: flower
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - TZ=Asia/Seoul
    ports:
      - '5555:5555'
    depends_on:
      - rabbitmq
      - celery_worker
      - celery_beat